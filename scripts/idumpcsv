#!/bin/bash

TARGET=$1
if [ -z ${TARGET} ]; then
  echo no input 1>&2
  exit 1
fi

if [[ ! -f ${TARGET} ]]; then
  echo not a valid input 1>&2
  exit
fi

WC=$(file ${TARGET}|grep SQLite|wc -l)
if [[ x${WC} != x1 ]]; then
  echo not a valid db file 1>&2
  exit
fi

TABLE=$2
if [ -z ${TABLE} ]; then
  TABLE="dtu_op";
fi


XLIMIT=""
if [[ x$3 != x ]]; then
  XLIMIT=" limit $3"
fi

# check
case ${TABLE} in
dtu_op)
;;
memcpy)
;;
fw)
;;
*)
echo UNKNOWN Table ${TABLE} 1>&2
exit 1
;;
esac

TEMPCSV=$(mktemp)


gen_brief() {
cat <<EOF
select count(*) from ${TABLE};
select * from ${TABLE} limit 5;
EOF
}

SRC0=$(mktemp)
gen_brief > ${SRC0}
sqlite3 ${TARGET} < ${SRC0}
if [[ x$? != x0 ]]; then
  echo breifing error 1>&2
  exit 1
fi

gen_src() {
cat <<EOF
.headers on
.mode csv
.output ${TEMPCSV}
select * from ${TABLE} ${XLIMIT};
EOF
}


SRC=$(mktemp)
gen_src > ${SRC}
#cat ${SRC}

sqlite3 ${TARGET} < ${SRC}
if [[ x$? != x0 ]]; then
  echo dump error 1>&2
  exit 1
fi

OUTHASH=$(sha256sum ${TEMPCSV}|awk '{print $1}')
INHASH=$(sha256sum ${TARGET}|awk '{print $1}')

echo Taret: ${TARGET}
echo Table: ${TABLE}
echo Input: ${INHASH}
echo Output: ${OUTHASH}

set +x
mv -v ${TEMPCSV} output.csv




