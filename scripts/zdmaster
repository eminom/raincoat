#!/bin/bash

# For example
# zdmaster 0 noforce xdumpfile
#   dump device 0 into xdumpfile
# zdmaster 0 force
# zdmaster 0 noforce

EOPT="--nc"
DEVID=$1
FORCE=$2

if [[ x${FORCE} == xforce ]]; then
  echo dump by force
  shift
else
  FORCE=""
fi

# From 1
OUTNAME=$2

if [[ x${OUTNAME} == x ]]; then
  OUTNAME="xdump"
fi

if [[ x${FORCE} != xforce ]]; then
  FORCE=""
fi

if [[ -z ${DEVID} ]]; then
  echo need device id, 0, etc
  exit 1
fi

CFG=$(sudo efsmt ${EOPT} -d ${DEVID} -reg TS.*DPF_RING*|grep DPF_RING_CFG|awk '{print $NF}')
CFGV=$(python3 -c "print('0x%x' % int('${CFG}', 16))" 2>/dev/null)
if [[ x$? != x0 ]]; then
  echo could not parse configure register properly 1>&2
  exit 1
fi

if [[ x${CFGV} != x0x0 ]]; then
  echo "still in configured state: ${CFGV}"
  if [[ x${FORCE} != xforce ]]; then
    exit 1
  fi
fi

START=$(sudo efsmt ${EOPT} -d ${DEVID} -reg TS.*DPF_RING*|grep DPF_RING_BASE_LOW|awk '{print $NF}')
if [[ -z ${START} ]]; then
  echo need dump start addr
  exit 1
fi

PROD=$(sudo efsmt ${EOPT} -d ${DEVID} -reg TS.*DPF_RING*|grep DPF_RING_PROD|awk '{print $NF}')
if [[ -z ${PROD} ]]; then
  echo size parsing error
  exit 1
fi

echo ${RPOD}
PRODx4="0x$(python3 -c "print('%x' % (int('${PROD}', 16) * 4))")"

echo \# dump dtu ${DEVID} from ${START} for ${PRODx4}

#sudo efsmt -d ${DEVID} -dmem dump ${START} ${PRODx4}|tail -n +6 | tee ${OUTNAME}
# dump to file by efsmt directly
set +x
sudo efsmt -d ${DEVID} -dmem dump ${START} ${PRODx4} ${OUTNAME}

echo dumped to ${OUTNAME}
